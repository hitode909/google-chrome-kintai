// Generated by CoffeeScript 1.6.3
var ACTION, CHROME_KEYCONFIG, check, check_loop, get_padding, session, wait_tab_load;

wait_tab_load = function(tab_id, remain, f) {
  return chrome.tabs.get(tab_id, function(tab) {
    console.log(tab.status);
    if (tab.status === 'complete') {
      return f();
    } else {
      if (remain < 0) {
        throw "wait_for_load failed";
      }
      return setTimeout(function() {
        return wait_tab_load(tab_id, remain - 1, f);
      }, 100);
    }
  });
};

session = function(query) {
  var kintai_url;
  kintai_url = localStorage.getItem('kintai_url');
  if (!kintai_url) {
    alert("URLが設定されていません．オプション画面から設定してください");
    return;
  }
  return chrome.tabs.create({
    url: "" + kintai_url + "?" + query
  }, function(tab) {
    return wait_tab_load(tab.id, 100, function() {
      return chrome.tabs.executeScript(tab.id, {
        file: 'session.js',
        runAt: 'document_end'
      });
    });
  });
};

check = function() {
  var day, down_at, hours, minutes, now, up_at;
  now = new Date;
  minutes = now.getMinutes();
  hours = now.getHours();
  day = now.getDay();
  up_at = +localStorage.getItem('up_at');
  down_at = +localStorage.getItem('down_at');
  if (minutes !== 0) {
    return;
  }
  if (!((0 < day && day < 6))) {
    return;
  }
  if (hours === up_at) {
    if (confirm("出勤しますか")) {
      session('up');
    }
  }
  if (hours === down_at) {
    if (confirm("退勤しますか")) {
      return session('down');
    }
  }
};

get_padding = function() {
  var now;
  now = new Date;
  return (60 - now.getSeconds()) * 1000;
};

check_loop = function() {
  check();
  return setTimeout(check_loop, get_padding());
};

check_loop();

chrome.runtime.onMessage.addListener(function(message) {
  return session(message);
});

CHROME_KEYCONFIG = 'okneonigbfnolfkmfgjmaeniipdjkgkl';

ACTION = {
  group: 'kintai',
  actions: [
    {
      name: 'up'
    }, {
      name: 'down'
    }
  ]
};

chrome.runtime.sendMessage(CHROME_KEYCONFIG, ACTION, function(res) {
  return console.log(["res", res]);
});

if (!((localStorage.getItem('login_url')) && (localStorage.getItem('kintai_url')))) {
  chrome.tabs.create({
    url: chrome.extension.getURL('options.html')
  });
}
